<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AgregarButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA3YAAAAtCAYAAADiDPkkAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAOTSURBVHhe7d2/axRBGAZg/yI7K7tUdlZik0oLESy00cYU
        wUJQwR/FFZIUISgSLQ4kBCKKiAHRwCEikRQRhCuiiCIpghYr39zOcsnFkMIkO/A88HK52c31L9/s7JEK
        AACAoil2AAAAhVPsAAAACqfYAQAAFE6xAwAAKJxiBwAAULg9F7u17/3q3ZePVffDy6qz9FhERERERET2
        KXO9xdS/Pq1/rhvZ7nYtdr82N9KPnpy+VB29eVpEREREREQOOGOdc9W1Z1Np2PYv/yx2r9d66Qfyjx2/
        d6Y6+2iyuvz07kibFBERERERkf+XiYVO6l8n7l9oOtmx2+NpB+VORopdTOniR/I/jz+4Wj1ffVtfBQAA
        4CDFdszzT643HS3+/rbxo746MFLscqmLNjj9pluvAgAAcJhiWhc7KfMAbvPP7/rKtmIX2y9zqdvrQ3oA
        AAAcjJjU5UfmYstm1hS72IKZbzCpAwAAaKfhgdz7/mpaa4rdnVcPm5EeAAAA7RWnZA73t6bY5dNW4l0J
        AAAAtFc8XxcTu+hwsT0zFbt4ni4WYismAAAA7Revooset7CyNCh28TqDWLjYvZVuAAAAoN3i8JTocXFG
        Sip2s8vzaSH2aQIAANB+c73F1OOi4KVil5ve8HGZAAAAtNdwj1PsAAAACqTYAQAAFE6xAwAAKJxiBwAA
        UDjFDgAAoHCKHQAAQOEUOwAAgMIpdgAAAIVT7AAAAAo3Uuym33TTwo0XM+kGAAAA2m12eX5rsVtYWUoL
        EwuddAMAAADtlgd0TbF79+VjWjg1cyXdAAAAQLtdezaVelz3w8tBsdv887s6dns8LfZ/fk03AQAA0F4n
        7l9IHe7T+udBsQuXn95Ni9H6AAAAaK+Y0kV/i3IXmmL3vr+aLkRiayYAAADtE7ssj987k7rbXG8xrTXF
        LuTjMsc656pfmxv1KgAAAG1x9tFk6m3nn1yvV7YVu3jWLg5QiZtOTl9KUzwAAAAO37eNH6nM5WFcfM+2
        FLuw9r2fSl3cHIkjNAEAADg88Yq6vP0yPl+v9eorAyPFLsQ2zHinXS530Qbje2zVjIf04lNERERERET2
        J9G7Ysh248XMlsFbTOyGJ3XZjsUuixaYj9AUERERERGRw0lM6WaX5+umNmrXYpfFexGiLe7UJEVERERE
        RGT/spezT/ZU7AAAAGgvxQ4AAKBwih0AAEDhFDsAAIDCKXYAAABFq6q/W3NublNs2bEAAAAASUVORK5C
        YII=
</value>
  </data>
</root>