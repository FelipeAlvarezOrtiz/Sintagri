// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sintagri.Modelo.DataBase.MSSQLServer.Models;

namespace Sintagri.Migrations
{
    [DbContext(typeof(SQLServerDbContext))]
    [Migration("20200424132028_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Aguas", b =>
                {
                    b.Property<int>("Id_Agua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Referencia")
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Origen")
                        .HasColumnName("Origen")
                        .HasColumnType("int");

                    b.HasKey("Id_Agua");

                    b.ToTable("Aguas");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Cultivos.Cultivo", b =>
                {
                    b.Property<int>("IdCultivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dias_Maximos_Cosecha")
                        .HasColumnType("int");

                    b.Property<int>("Dias_Minimos_Cosecha")
                        .HasColumnType("int");

                    b.Property<int>("Especie")
                        .HasColumnType("int");

                    b.Property<short>("Formato")
                        .HasColumnType("smallint");

                    b.Property<float>("Profundidad_Raiz_Maxima")
                        .HasColumnType("decimal(8,3");

                    b.Property<float>("Profundidad_Raiz_Minima")
                        .HasColumnType("decimal(8,3");

                    b.Property<short>("Proveedor")
                        .HasColumnType("smallint");

                    b.Property<string>("Semillera")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Variedad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdCultivo");

                    b.ToTable("Cultivos");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Fertilizante", b =>
                {
                    b.Property<int>("ID_Insumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Costo_Neto")
                        .HasColumnType("int");

                    b.Property<int>("Costo_Total")
                        .HasColumnType("int");

                    b.Property<string>("Manofacturera")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("Presentacion_Insumo")
                        .HasColumnName("Presentacion")
                        .HasColumnType("tinyint");

                    b.Property<string>("Proveedor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte>("Tipo_Formulacion")
                        .HasColumnType("tinyint");

                    b.HasKey("ID_Insumo");

                    b.ToTable("Fertilizantes");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Fitosanitario", b =>
                {
                    b.Property<int>("ID_Insumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Costo_Neto")
                        .HasColumnType("int");

                    b.Property<int>("Costo_Total")
                        .HasColumnType("int");

                    b.Property<string>("Etiqueta")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Manofacturera")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Modo_Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte>("Presentacion_Insumo")
                        .HasColumnName("Presentacion")
                        .HasColumnType("tinyint");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<string>("Proveedor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RegistroSAG")
                        .HasColumnType("int");

                    b.HasKey("ID_Insumo");

                    b.ToTable("Fitosanitarios");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Ingrediente_Activo", b =>
                {
                    b.Property<int>("Id_Ingrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Concentracion")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Grupo_Quimico")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("ID_Insumo")
                        .HasColumnType("bigint");

                    b.Property<int?>("InsumoID_Insumo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Ingrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Unidad_Dependencia")
                        .HasColumnName("Dependencia")
                        .HasColumnType("int");

                    b.HasKey("Id_Ingrediente");

                    b.HasIndex("InsumoID_Insumo");

                    b.ToTable("Ingredientes_Activos");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.Formulacion", b =>
                {
                    b.Property<int>("Id_Formulacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre_Formulacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Sub_Prioridad")
                        .HasColumnType("int");

                    b.HasKey("Id_Formulacion");

                    b.ToTable("Formulaciones");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.PFQ_Agua", b =>
                {
                    b.Property<int>("Id_PFQ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AguaId_Agua")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Unidad_Medida")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float>("Valor_PFQ")
                        .HasColumnName("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id_PFQ");

                    b.HasIndex("AguaId_Agua");

                    b.ToTable("Propiedades_Agua");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.PFQ_Fertilizante", b =>
                {
                    b.Property<int>("Id_PFQ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int?>("FertilizanteID_Insumo")
                        .HasColumnType("int");

                    b.Property<long>("ID_Insumo")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Unidad_Medida")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float>("Valor_PFQ")
                        .HasColumnName("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id_PFQ");

                    b.HasIndex("FertilizanteID_Insumo");

                    b.ToTable("Propiedades_Fertilizantes");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.PFQ_Fitosanitario", b =>
                {
                    b.Property<int>("Id_PFQ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int?>("FitosanitarioID_Insumo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Unidad_Medida")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float>("Valor_PFQ")
                        .HasColumnName("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id_PFQ");

                    b.HasIndex("FitosanitarioID_Insumo");

                    b.ToTable("Propiedades_Fitosanitarios");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Potreros", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("Predio_PertenencienteID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("Predio_PertenencienteID");

                    b.ToTable("Potreros");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Predio", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Predios");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Sectores", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("Potrero_pertenecienteID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("Potrero_pertenecienteID");

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Valvulas", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("Cultivo_ActualIdCultivo")
                        .HasColumnType("int");

                    b.Property<int?>("Origen_RiegoId_Agua")
                        .HasColumnType("int");

                    b.Property<long?>("SectorID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("Cultivo_ActualIdCultivo");

                    b.HasIndex("Origen_RiegoId_Agua");

                    b.HasIndex("SectorID");

                    b.ToTable("Valvulas");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Ingrediente_Activo", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Fitosanitario", "Insumo")
                        .WithMany("Ingredientes")
                        .HasForeignKey("InsumoID_Insumo");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.PFQ_Agua", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Aguas", "Agua")
                        .WithMany("Propiedades_Agua")
                        .HasForeignKey("AguaId_Agua");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.PFQ_Fertilizante", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Fertilizante", "Fertilizante")
                        .WithMany("Propiedades_Fertilizante")
                        .HasForeignKey("FertilizanteID_Insumo");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Misc.PFQ_Fitosanitario", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Fitosanitario", "Fitosanitario")
                        .WithMany("Propiedades_Fitosanitarios")
                        .HasForeignKey("FitosanitarioID_Insumo");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Potreros", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Predio", "Predio_Pertenenciente")
                        .WithMany("Potreros")
                        .HasForeignKey("Predio_PertenencienteID");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Sectores", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Potreros", "Potrero_perteneciente")
                        .WithMany("Sectores")
                        .HasForeignKey("Potrero_pertenecienteID");
                });

            modelBuilder.Entity("Sintagri.Modelo.Entidades.Valvulas", b =>
                {
                    b.HasOne("Sintagri.Modelo.Entidades.Cultivos.Cultivo", "Cultivo_Actual")
                        .WithMany()
                        .HasForeignKey("Cultivo_ActualIdCultivo");

                    b.HasOne("Sintagri.Modelo.Entidades.Aguas", "Origen_Riego")
                        .WithMany()
                        .HasForeignKey("Origen_RiegoId_Agua");

                    b.HasOne("Sintagri.Modelo.Entidades.Sectores", "Sector")
                        .WithMany("Valvulas")
                        .HasForeignKey("SectorID");
                });
#pragma warning restore 612, 618
        }
    }
}
